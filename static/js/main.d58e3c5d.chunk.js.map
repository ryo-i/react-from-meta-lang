{"version":3,"sources":["hello.js","Header.tsx","Main.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hello","JSON","parse","message","text","selector","document","addEventListener","querySelector","innerHTML","console","log","Header","className","Main","Footer","App","Helmet","title","meta","name","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yIAAA,IAAMA,EAAQC,KAAKC,MACf,gJAGMC,EAAU,CACZC,KAAMJ,EAAMG,QAAQC,KACpBC,SAAUL,EAAMG,QAAQE,UAGtBD,EAAOD,EAAQC,KACfC,EAAWF,EAAQE,SAEzBC,SAASC,iBAAiB,oBAAoB,WAC1CD,SAASE,cAAcH,GAAUI,UAAYL,EAC7CM,QAAQC,IAAI,UAAYP,O,iGCHjBQ,MATf,WACE,OACE,yBAAQC,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAd,mEACA,mBAAGA,UAAU,eAAb,2M,MCiBOC,MAnBf,WACE,OACE,+BACE,0BAASD,UAAU,OAAnB,UACI,oBAAIA,UAAU,cAAd,kDACA,mBAAGA,UAAU,cAAb,kMACA,0BAASA,UAAU,QAAnB,UACI,oBAAIA,UAAU,eAAd,+CACA,mBAAGA,UAAU,cAAb,4FAEJ,0BAASA,UAAU,QAAnB,UACI,oBAAIA,UAAU,eAAd,8CACA,oBAAGA,UAAU,cAAb,6FAA0C,sBAAMA,UAAU,uBAA1D,qBCNCE,MARf,WACE,OACE,wBAAQF,UAAU,SAAlB,SACI,mBAAGA,UAAU,eAAb,gDCoBOG,MAhBf,WACE,OACE,sBAAKH,UAAU,MAAf,UACI,cAACI,EAAA,EAAD,CACIC,MAPM,wDAQNC,KAAM,CACF,CAAEC,KAAM,cAAeC,QARf,gMAWhB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCNOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.d58e3c5d.chunk.js","sourcesContent":["const hello = JSON.parse(\n    '{\"message\":{\"text\":\"こんにちは、ふろんとえんど。\",\"selector\":\".inner__text--hello\"}}'\n    );\n    \n    const message = { \n        text: hello.message.text, \n        selector: hello.message.selector \n    };\n    \n    const text = message.text;\n    const selector = message.selector;\n    \n    document.addEventListener(\"DOMContentLoaded\", () => {\n        document.querySelector(selector).innerHTML = text;\n        console.log(\"text-> \" + text);\n    });","import React from 'react';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n        <h1 className=\"header__title\">Reactとメタ言語の比較</h1>\n        <p className=\"header__text\">以前作ったメタ言語スターターキットの内容をReact環境で再現してみる</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './hello.js';\n\n\nfunction Main() {\n  return (\n    <main>\n      <section className=\"main\">\n          <h1 className=\"main__title\">タイトルです</h1>\n          <p className=\"main__title\">テキストです。テキストです。テキストですったらテキストです。</p>\n          <section className=\"inner\">\n              <h2 className=\"inner__title\">CSS（文字色）</h2>\n              <p className=\"inner__text\">CSSでタイトルの文字色変更。</p>\n          </section>\n          <section className=\"inner\">\n              <h2 className=\"inner__title\">JS（文字列）</h2>\n              <p className=\"inner__text\">JSでテキストの文字列追加→「<span className='inner__text--hello'></span>」</p>\n          </section>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n        <p className=\"footer__text\">©️ react-from-meta-lang</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nconst titleText = 'Reactとメタ言語の比較';\nconst descriptionText = '以前作ったメタ言語スターターキットの内容をReact環境で再現してみる';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Helmet\n            title={ titleText }\n            meta={[\n                { name: 'description', content: descriptionText }\n            ]}\n         />\n        <Header />\n        <Main />\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}