{"version":3,"sources":["hello.js","Header.tsx","Inner.tsx","Main.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hello","JSON","parse","message","text","selector","document","addEventListener","querySelector","innerHTML","console","log","title","Data","data","header","Header","className","dangerouslySetInnerHTML","__html","innerJson","inner","Inner","map","index","main","Main","footer","Footer","titleText","descriptionText","App","Helmet","meta","name","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","variable","baseColor","GlobalStyle","createGlobalStyle","textSize","textColor","ReactDOM","render","StrictMode","getElementById"],"mappings":"8QAAA,IAAMA,EAAQC,KAAKC,MACf,gJAGEC,EAAU,CACRC,KAAMJ,EAAMG,QAAQC,KACpBC,SAAUL,EAAMG,QAAQE,UAG1BD,EAAOD,EAAQC,KACfC,EAAWF,EAAQE,SAEzBC,SAASC,iBAAiB,oBAAoB,WAC1CD,SAASE,cAAcH,GAAUI,UAAYL,EAC7CM,QAAQC,IAAI,UAAYP,O,wGCXtBQ,EAAQC,EAAKC,KAAKC,OAAOH,MACzBR,EAAOS,EAAKC,KAAKC,OAAOX,KAWfY,MATf,WACE,OACE,yBAAQC,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAd,SAAgCL,IAChC,mBAAGK,UAAU,eAAeC,wBAAyB,CAAEC,OAAQf,SCNjEgB,G,MAAYP,EAAKC,KAAKO,OAebC,MAbf,WACE,OACE,qBAAKL,UAAU,QAAf,SACGG,EAAUG,KAAI,SAACH,EAAWI,GAAZ,OACb,oCACE,oBAAIP,UAAU,eAAd,SAA+BG,EAAUR,QACzC,mBAAGK,UAAU,cAAcC,wBAAyB,CAAEC,OAAQC,EAAUhB,UAF3DoB,SCNjBZ,EAAQC,EAAKC,KAAKW,KAAKb,MACvBR,EAAOS,EAAKC,KAAKW,KAAKrB,KAebsB,MAZf,WACE,OACE,+BACE,0BAAST,UAAU,OAAnB,UACI,oBAAIA,UAAU,cAAd,SAA8BL,IAC9B,mBAAGK,UAAU,cAAcC,wBAAyB,CAAEC,OAAQf,KAC9D,cAAC,EAAD,UCXJA,EAAOS,EAAKC,KAAKa,OAAOvB,KAUfwB,MARf,WACE,OACE,wBAAQX,UAAU,SAAlB,SACI,mBAAGA,UAAU,eAAeC,wBAAyB,CAAEC,OAAQf,QCDjEyB,EAAYhB,EAAKC,KAAKC,OAAOH,MAC7BkB,EAAkBjB,EAAKC,KAAKC,OAAOX,KAkB1B2B,MAhBf,WACE,OACE,sBAAKd,UAAU,MAAf,UACI,cAACe,EAAA,EAAD,CACIpB,MAAQiB,EACRI,KAAM,CACF,CAAEC,KAAM,cAAeC,QAASL,MAGxC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPOM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oTCAd,IAAMQ,E,MAAwBA,SAC9BnC,QAAQC,IAAIkC,EAASC,WAErB,IAAMC,EAAcC,YAAH,IAKAH,EAASI,SACbJ,EAASK,WAWtBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACN,EAAD,IACA,cAAC,EAAD,OAEFzC,SAASgD,eAAe,SAM1BlB,K","file":"static/js/main.56a16db6.chunk.js","sourcesContent":["const hello = JSON.parse(\n    '{\"message\":{\"text\":\"こんにちは、ふろんとえんど。\",\"selector\":\".inner__text--hello\"}}'\n);\n    \nconst message = { \n        text: hello.message.text, \n        selector: hello.message.selector \n};\n\nconst text = message.text;\nconst selector = message.selector;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelector(selector).innerHTML = text;\n    console.log(\"text-> \" + text);\n});","import React from 'react';\nimport Data from './data.json';\n\nconst title = Data.data.header.title;\nconst text = Data.data.header.text;\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n        <h1 className=\"header__title\">{ title }</h1>\n        <p className=\"header__text\" dangerouslySetInnerHTML={{ __html: text }}></p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './hello';\nimport Data from './data.json';\n\nconst innerJson = Data.data.inner;\n\nfunction Inner() {\n  return (\n    <div className=\"inner\">\n      {innerJson.map((innerJson, index) => \n        <section key={ index }>\n          <h2 className=\"inner__title\">{ innerJson.title }</h2>\n          <p className=\"inner__text\" dangerouslySetInnerHTML={{ __html: innerJson.text }}></p>\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default Inner;\n","import React from 'react';\nimport Inner from './Inner';\nimport Data from './data.json';\n\nconst title = Data.data.main.title;\nconst text = Data.data.main.text;\n\n\nfunction Main() {\n  return (\n    <main>\n      <section className=\"main\">\n          <h1 className=\"main__title\">{ title }</h1>\n          <p className=\"main__title\" dangerouslySetInnerHTML={{ __html: text }}></p>\n          <Inner />\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Data from './data.json';\n\nconst text = Data.data.footer.text;\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n        <p className=\"footer__text\" dangerouslySetInnerHTML={{ __html: text }}></p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Data from './data.json';\n\nconst titleText = Data.data.header.title;\nconst descriptionText = Data.data.header.text;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Helmet\n            title={ titleText }\n            meta={[\n                { name: 'description', content: descriptionText }\n            ]}\n         />\n        <Header />\n        <Main />\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components'\nimport cssVariables from './css_variables.json'\n\n\nconst variable = cssVariables.variable;\nconsole.log(variable.baseColor);\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    font-size: ${variable.textSize};\n    color: ${variable.textColor};\n    *, *:before, *:after {\n        box-sizing: border-box;\n    }\n    a {\n        color: $base-color;\n    }\n  }\n`;\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}